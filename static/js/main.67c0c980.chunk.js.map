{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","localStorage","getItem","pokemonName","setPokemonName","pokemonChosen","setPokemonChosen","allPokemonNames","setAllPokemonNames","reccomendation","setReccomendation","name","img","hp","attack","defense","type","pokemon","setPokemon","useEffect","currentpokemonName","searchPokemon","getAllPokemon","arr","filter","e","startsWith","length","setItem","Axios","get","then","res","data","sprites","front_default","stats","base_stat","types","catch","err","alert","names","results","map","obj","push","console","log","className","class","value","onChange","event","target","placeholder","onClick","icon","faSearch","str","id","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67c0c980.chunk.js","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSearch} from '@fortawesome/free-solid-svg-icons';\nfunction App() {\n  const [pokemonName, setPokemonName] = useState(localStorage.getItem('myPokemon'));\n  const [pokemonChosen, setPokemonChosen] = useState(false);\n  \n  const [allPokemonNames, setAllPokemonNames] = useState([]);\n  const [reccomendation, setReccomendation] = useState([]);\n  const [pokemon, setPokemon] = useState({\n    name: \"Ash\",\n    img: \"https://sm.ign.com/ign_ap/screenshot/default/ashwins_78um.jpg\",\n    hp: \"-\",\n    attack: \"-\",\n    defense: \"-\",\n    type: \"master of\"\n  });\n  // useEffect(() => {\n  //   localStorage.setItem('myPokemon', pokemonName);\n  // }, [pokemonName]);\n  useEffect(() => {\n    // localStorage.setItem('myPokemon', pokemonName);\n    const currentpokemonName = localStorage.getItem('myPokemon');\n    if(currentpokemonName)\n    searchPokemon(currentpokemonName);\n    getAllPokemon();\n  }, []);\n  useEffect(() => {\n    const arr = allPokemonNames.filter(e => e.startsWith(pokemonName));\n    if(pokemonName)\n    if(pokemonName.length >= 2)\n    setReccomendation(arr);\n  }, [pokemonName]);\n  useEffect(() => {\n    setPokemonChosen(false);\n  }, [pokemonName]);\n  const searchPokemon = (name) => {\n    localStorage.setItem('myPokemon', name);\n    Axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`).then((res) => {\n      setPokemon({name: pokemonName, img: res.data.sprites.front_default,\n      hp: res.data.stats[0].base_stat,\n      attack: res.data.stats[1].base_stat,\n      defense: res.data.stats[2].base_stat,\n      type: res.data.types[0].type.name})\n      // setAllPokemonNames([]);\n      setPokemonChosen(true);\n      \n    }).catch(err => {\n      alert(\"Enter a valid Pokemon Name in small cases\");\n    })\n    \n  }\n\n  const getAllPokemon = () => {\n\n    Axios.get(`https://pokeapi.co/api/v2/pokemon/?limit=100}`).then((res) => {\n      const names = [];\n      res.data.results.map((obj) => {\n        names.push(obj.name);\n      })\n      setAllPokemonNames(names)})\n    .catch(err => {\n      alert(\"Enter a valid Pokemon Name in small cases\");\n    })\n  \n  };\n  console.log(allPokemonNames);\n  return (\n    <div className=\"App\">\n      <div className=\"Title-section\">\n      <h1>PokeSearch</h1>\n      <div class=\"container\">\n   <div class=\"search-box\">\n    \n      <input type=\"text\" value = {pokemonName} onChange = {(event) => setPokemonName(event.target.value)} class=\"search-input\" placeholder=\"Search..\" />\n\n      <button onClick = {() => searchPokemon(pokemonName)} class=\"search-button\">\n        <FontAwesomeIcon icon={faSearch}></FontAwesomeIcon>\n      </button>\n      \n   </div>\n   <div className=\"reccomendation\">\n     \n       {!pokemonChosen ? reccomendation.map(str => <p className=\"rec\" onClick = {() => setPokemonName(str)} key={str}>{str}</p>) : (<></>)}\n      \n     </div>\n</div>\n\n</div>\n    <div id=\"div2\" className=\"displaySection\">\n     \n          <div id=\"card\">\n\t<h3>{pokemon.name}</h3>\n\t<div class=\"image-crop\">\n\t\t<img id=\"avatar\" src={pokemon.img} />\n\t</div>\n\t<div id=\"bio\">\n\t\t<p>It is a {pokemon.type} type pokemon </p>\n\t</div>\n\t<div id=\"stats\">\n\t\t<div class=\"col\">\n\t\t\t<p class=\"stat\">{!pokemon.attack ? (<>-</>) : pokemon.attack}</p>\n\t\t\t<p class=\"label\">Attack</p>\n\t\t</div>\n\t\t\t\t<div class=\"col\">\n\t\t\t<p class=\"stat\">{!pokemon.hp ? (<>-</>) : pokemon.hp}</p>\n\t\t\t<p class=\"label\">HP</p>\n\t\t</div>\n\t\t\t\t<div class=\"col\">\n\t\t\t<p class=\"stat\">{!pokemon.defense ? (<>-</>) : pokemon.defense}</p>\n\t\t\t<p class=\"label\">Defence</p>\n\t\t</div>\n\t</div>\n\t\n</div>\n        \n    </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}